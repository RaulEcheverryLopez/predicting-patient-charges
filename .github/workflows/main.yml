name: Patient Charges MLOps Pipeline

on:
  push:
    paths:
      - 'data/raw/**'
      - 'data/processed/**'
      - 'scripts/**'
      - 'notebooks/**'
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        pytest tests/ --cov=scripts/ --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black
        
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Check formatting with black
      run: |
        black . --check

  train:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || contains(github.event.head_commit.modified, 'data/')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Train model
      run: |
        python scripts/pipeline.py
        
    - name: Commit and push if model changed
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add models/
        git diff --quiet && git diff --staged --quiet || (git commit -m "Update model [skip ci]" && git push)

  build-and-push:
    needs: [train]
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || contains(github.event.head_commit.modified, 'models/')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/patient-charges:latest
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/patient-charges:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/patient-charges:buildcache,mode=max 